#!/bin/bash
# Script de controle para o Sistema H√≠brido de Seguran√ßa

# Usar diret√≥rio relativo baseado na localiza√ß√£o do script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
cd "$PROJECT_DIR"

case "$1" in
    test)
        echo "üß™ Executando an√°lise h√≠brida de seguran√ßa..."
        source venv/bin/activate && python3 hybrid_security_monitor.py
        ;;

    status)
        echo "üìä STATUS DO SISTEMA H√çBRIDO"
        echo "=============================="

        # Verificar se Prometheus est√° rodando
        if curl -s http://localhost:9090/-/healthy > /dev/null 2>&1; then
            echo "‚úÖ Prometheus: RODANDO"
        else
            echo "‚ùå Prometheus: PARADO"
        fi

        # Verificar se Blackbox est√° rodando
        if curl -s http://localhost:9115/ > /dev/null 2>&1; then
            echo "‚úÖ Blackbox Exporter: RODANDO"
        else
            echo "‚ùå Blackbox Exporter: PARADO"
        fi

        # Verificar m√©tricas h√≠bridas
        hybrid_metrics=$(curl -s http://localhost:9091/metrics | grep -c "hybrid_")
        if [ $hybrid_metrics -gt 0 ]; then
            echo "‚úÖ M√©tricas H√≠bridas: $hybrid_metrics m√©tricas ativas"
        else
            echo "‚ùå M√©tricas H√≠bridas: Nenhuma m√©trica encontrada"
        fi

        # Verificar jobs de seguran√ßa no Prometheus
        echo ""
        echo "üîç JOBS DE SEGURAN√áA ATIVOS:"
        curl -s http://localhost:9090/api/v1/label/__name__/values | jq -r '.data[]' | grep -E "(probe_success|hybrid_)" | head -5
        ;;

    blackbox-test)
        echo "üîç Testando m√≥dulos de seguran√ßa do Blackbox..."

        # Carregar configura√ß√£o dos sites
        if [ ! -f "configs/sites.conf" ]; then
            echo "‚ùå Arquivo configs/sites.conf n√£o encontrado!"
            echo "üí° Copie configs/sites.conf.example para configs/sites.conf e configure"
            exit 1
        fi

        source configs/sites.conf

        # Usar o primeiro site da lista para testes
        if [ ${#SITES_HTTP[@]} -gt 0 ]; then
            TEST_SITE="${SITES_HTTP[0]}"

            # Testar alguns m√≥dulos espec√≠ficos
            echo "Testing sensitive files check on $TEST_SITE..."
            curl -s "http://localhost:9115/probe?target=$TEST_SITE/.env&module=security_sensitive_files" | grep "probe_success"

            echo "Testing security headers on $TEST_SITE..."
            curl -s "http://localhost:9115/probe?target=$TEST_SITE&module=security_headers" | grep "probe_success"
        else
            echo "‚ùå Nenhum site configurado para teste!"
        fi
        ;;

    logs)
        echo "üìã LOGS DO SISTEMA H√çBRIDO:"
        echo "=========================="
        if [ -f hybrid_security.log ]; then
            echo "√öltimas 20 linhas:"
            tail -20 hybrid_security.log
        else
            echo "Nenhum log encontrado ainda"
        fi
        ;;

    metrics)
        echo "üìä M√âTRICAS H√çBRIDAS ATUAIS:"
        echo "============================="
        curl -s http://localhost:9091/metrics | grep hybrid_ | while read line; do
            echo "$line"
        done
        ;;

    dashboard)
        echo "üì± INFORMA√á√ïES DO DASHBOARD:"
        echo "============================"
        echo "Dashboard Grafana: hybrid_security_dashboard.json"
        echo "Importe este arquivo no Grafana para visualizar:"
        echo "‚Ä¢ Scores de seguran√ßa (geral, externo, interno)"
        echo "‚Ä¢ Status de compliance"
        echo "‚Ä¢ Vulnerabilidades detectadas"
        echo "‚Ä¢ Timeline de amea√ßas"
        echo "‚Ä¢ Status dos checks do Blackbox"
        ;;

    restart-services)
        echo "üîÑ Reiniciando servi√ßos do sistema h√≠brido..."

        # Parar servi√ßos
        pkill -f blackbox_exporter
        pkill -f prometheus

        sleep 3

        # Iniciar Blackbox
        nohup ./blackbox_exporter --config.file=blackbox.yml > blackbox.log 2>&1 &
        echo "‚úÖ Blackbox Exporter reiniciado"

        # Iniciar Prometheus
        nohup ./prometheus --config.file=prometheus.yml --storage.tsdb.path=./data > prometheus.log 2>&1 &
        echo "‚úÖ Prometheus reiniciado"

        sleep 5

        # Testar conectividade
        if curl -s http://localhost:9090/-/healthy > /dev/null 2>&1; then
            echo "‚úÖ Prometheus operacional"
        else
            echo "‚ùå Problema com Prometheus"
        fi

        if curl -s http://localhost:9115/ > /dev/null 2>&1; then
            echo "‚úÖ Blackbox Exporter operacional"
        else
            echo "‚ùå Problema com Blackbox Exporter"
        fi
        ;;

    security-report)
        echo "üîí RELAT√ìRIO DE SEGURAN√áA COMPLETO"
        echo "=================================="
        source venv/bin/activate && python3 hybrid_security_monitor.py | grep -A 50 "HYBRID SECURITY REPORT"
        ;;

    check-sites)
        echo "üåê VERIFICANDO SITES INDIVIDUALMENTE:"
        echo "====================================="

        # Carregar configura√ß√£o dos sites
        if [ ! -f "configs/sites.conf" ]; then
            echo "‚ùå Arquivo configs/sites.conf n√£o encontrado!"
            echo "üí° Copie configs/sites.conf.example para configs/sites.conf e configure"
            exit 1
        fi

        source configs/sites.conf

        for site in "${SITES_HTTP[@]}"; do
            echo "Checking $site..."

            # Teste b√°sico de conectividade
            if curl -s --max-time 5 "$site" > /dev/null; then
                echo "  ‚úÖ Online"
            else
                echo "  ‚ùå Offline/Problemas"
            fi

            # Teste de arquivos sens√≠veis
            status=$(curl -s -o /dev/null -w "%{http_code}" --max-time 5 "$site/.env")
            if [ "$status" = "404" ] || [ "$status" = "403" ]; then
                echo "  ‚úÖ .env protegido ($status)"
            else
                echo "  ‚ö†Ô∏è .env acess√≠vel ($status)"
            fi
        done
        ;;

    *)
        echo "üîí SISTEMA H√çBRIDO DE SEGURAN√áA"
        echo "==============================="
        echo ""
        echo "Uso: $0 {comando}"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  test              - Executar an√°lise h√≠brida completa"
        echo "  status            - Ver status de todos os componentes"
        echo "  blackbox-test     - Testar m√≥dulos espec√≠ficos do Blackbox"
        echo "  logs              - Ver logs do sistema h√≠brido"
        echo "  metrics           - Ver m√©tricas h√≠bridas atuais"
        echo "  dashboard         - Informa√ß√µes sobre o dashboard Grafana"
        echo "  restart-services  - Reiniciar Prometheus e Blackbox"
        echo "  security-report   - Gerar relat√≥rio completo de seguran√ßa"
        echo "  check-sites       - Verificar sites individualmente"
        echo ""
        echo "üìä DASHBOARDS DISPON√çVEIS:"
        echo "‚Ä¢ hybrid_security_dashboard.json - Dashboard principal"
        echo "‚Ä¢ realtime_bot_dashboard.json - Monitoramento de bots"
        echo "‚Ä¢ web_traffic_dashboard.json - An√°lise de tr√°fego"
        echo "‚Ä¢ all_sites_dashboard.json - Vis√£o geral dos sites"
        ;;
esac
