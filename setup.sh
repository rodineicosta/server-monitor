#!/bin/bash
# Script de setup inicial para o sistema de monitoramento

echo "üöÄ SETUP INICIAL - SISTEMA DE MONITORAMENTO"
echo "==========================================="

# Usar diret√≥rio relativo baseado na localiza√ß√£o do script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$SCRIPT_DIR"
cd "$PROJECT_DIR"

# Verificar se os bin√°rios necess√°rios existem
echo "üîç Verificando bin√°rios necess√°rios..."
missing_binaries=()
if [ ! -f "prometheus" ]; then missing_binaries+=("prometheus"); fi
if [ ! -f "promtool" ]; then missing_binaries+=("promtool"); fi
if [ ! -f "blackbox_exporter" ]; then missing_binaries+=("blackbox_exporter"); fi
if [ ! -f "pushgateway" ]; then missing_binaries+=("pushgateway"); fi

if [ ${#missing_binaries[@]} -gt 0 ]; then
    echo ""
    echo "‚ùå Bin√°rios ausentes: ${missing_binaries[*]}"
    echo ""
    echo "üì• DOWNLOAD NECESS√ÅRIO:"
    echo "======================="
    echo ""
    echo "1Ô∏è‚É£ Prometheus & Promtool:"
    echo "   https://github.com/prometheus/prometheus/releases/latest"
    echo ""
    echo "2Ô∏è‚É£ Blackbox Exporter:"
    echo "   https://github.com/prometheus/blackbox_exporter/releases/latest"
    echo ""
    echo "3Ô∏è‚É£ Pushgateway:"
    echo "   https://github.com/prometheus/pushgateway/releases/latest"
    echo ""
    echo "üìã INSTRU√á√ïES:"
    echo "- Baixe os arquivos apropriados para sua plataforma (macOS/Linux/Windows)"
    echo "- Extraia os bin√°rios para a raiz deste diret√≥rio: $PROJECT_DIR"
    echo "- Execute este script novamente ap√≥s o download"
    echo ""
    exit 1
else
    echo "‚úÖ Todos os bin√°rios encontrados!"
fi
echo ""

# 1. Verificar se arquivo de configura√ß√£o existe
if [ ! -f "configs/sites.conf" ]; then
    echo "üìã Criando arquivo de configura√ß√£o..."
    cp configs/sites.conf.example configs/sites.conf
    echo "‚úÖ Arquivo configs/sites.conf criado"
    echo ""
    echo "‚ö†Ô∏è  IMPORTANTE: Configure os sites em configs/sites.conf antes de prosseguir!"
    echo "   Edite o arquivo e substitua os exemplos pelos seus sites reais."
    echo ""
    read -p "Pressione ENTER ap√≥s configurar os sites..."
fi

# 2. Gerar configura√ß√£o do Prometheus
echo "‚öôÔ∏è  Gerando configura√ß√£o do Prometheus..."
bash scripts/generate_prometheus_config.sh

# 3. Verificar ambiente virtual Python
if [ ! -d "venv" ]; then
    echo "üêç Criando ambiente virtual Python..."
    python3 -m venv venv
    source venv/bin/activate
    pip install prometheus-client requests beautifulsoup4
    echo "‚úÖ Ambiente virtual criado e configurado"
else
    echo "‚úÖ Ambiente virtual j√° existe"
fi

# 4. Criar diret√≥rios necess√°rios
echo "üìÅ Criando diret√≥rios necess√°rios..."
mkdir -p logs services data

# 5. Verificar execut√°veis
echo "üîç Verificando execut√°veis..."
if [ ! -f "prometheus" ]; then
    echo "‚ùå Execut√°vel 'prometheus' n√£o encontrado!"
    echo "   Baixe de: https://prometheus.io/download/"
fi

if [ ! -f "blackbox_exporter" ]; then
    echo "‚ùå Execut√°vel 'blackbox_exporter' n√£o encontrado!"
    echo "   Baixe de: https://prometheus.io/download/"
fi

if [ ! -f "pushgateway" ]; then
    echo "‚ùå Execut√°vel 'pushgateway' n√£o encontrado!"
    echo "   Baixe de: https://prometheus.io/download/"
fi

# 6. Teste de configura√ß√£o
echo "üß™ Testando configura√ß√£o..."
source configs/sites.conf

if [ ${#SITES_HTTP[@]} -gt 0 ]; then
    echo "‚úÖ ${#SITES_HTTP[@]} sites HTTP configurados"
else
    echo "‚ö†Ô∏è  Nenhum site HTTP configurado"
fi

if [ ${#SITES_LOGS[@]} -gt 0 ]; then
    echo "‚úÖ ${#SITES_LOGS[@]} sites de log configurados"
else
    echo "‚ö†Ô∏è  Nenhum site de log configurado"
fi

echo ""
echo "üéâ SETUP CONCLU√çDO!"
echo "=================="
echo ""
echo "Pr√≥ximos passos:"
echo "1. ./monitor.sh start     - Iniciar sistema"
echo "2. ./monitor.sh status    - Verificar status"
echo "3. ./monitor.sh test      - Testar funcionamento"
echo ""
echo "üìä Dashboards dispon√≠veis em: ./dashboards/"
echo "üìã Logs centralizados em: ./logs/"
echo "‚öôÔ∏è  Configura√ß√µes em: ./configs/"
